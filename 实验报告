# hw5
****实验报告：数字图像处理第五次作业

自动化61  李剑灏  2160100243


作业要求：
1频域低通滤波器：设计低通滤波器包括 butterworth and Gaussian (选择合适的半径，计算功率谱比),平滑测试图像test1和2;分析各自优缺点；
2频域高通滤波器：设计高通滤波器包括butterworth and Gaussian，在频域增强边缘。选择半径和计算功率谱比，测试图像test3,4：分析各自优缺点；
3其他高通滤波器：拉普拉斯和Unmask，对测试图像test3,4滤波；分析各自优缺点；
比较并讨论空域低通高通滤波（Project3）与频域低通和高通的关系；
按标准格式提交报告； 


****一、实验原理：
1. 给定一幅大小为m*n的图像f(x,y)。选择适当的填充参数P和Q，一般令P = 2m，Q = 2n。
2. 对图像f(x, y)填充0，填充后得到图像大小为P*Q的图像fp(x, y)。
3. 用(-1)^(x+y)乘以fp(x,y)将其移到变换中心（中心化）。
4. 计算fp(x, y)的DFT，得到F(u,v)。 
5. 生成一个实的，对称的滤波函数H(u, v)，大小为P*Q，中心在(P/2, Q/2)处。然后相乘（矩阵点乘）得到G(u,v) = H(u,v)F(u,v)。
6. 对G(u, v)反傅里叶变换，然后取实部，再乘以(-1)^(x+y)进行反中心变换最后得到gp(x,y)。
7. 提取gp(x,y)左上角的m*n区域，对提取的部分进行标准化处理，得到最终的结果图像g(x,y)。

我的思路是：依照上述步骤分别设计四个滤波器，Bfilter——巴特沃斯滤波器，Gfilter——高斯滤波器，Lfilter——拉普拉斯滤波器，Ufilter——unmask滤波器，
将他们分别作为函数，传入需要转换的图片、阶数，截止频率，高通或是低通的bool值等，得到需要的结果图像，输出显示。


***二、实验结果：
第1题：
结果：

分析：截止频率越小滤波后越模糊，越大越清晰但滤波效果差一些。

第2题：
结果：

分析：选取截止频率为18的时候，高斯滤波可以达到最佳效果，此时阶数为2.

第3题：
结果：

分析：边缘提取已经较为模糊，效果不太好。。。。

***三、空域与频域的结果分析：
1.在低通滤波上，空域和频域两种处理方式所得的效果基本差不多，而频域上的运算往往更加的快速，利用傅里叶变换和更简便的滤波函数相乘，免去了卷积
运算带来的繁琐步骤。对于不规则的噪声值，通过傅里叶变换可以得到很好的平滑效果。
2.在高通滤波上，由于空域上卷积运算高通滤波的效果更好，往往在边缘提取和锐化上更加优秀，而频域运算容易出现边缘模糊或者非边缘部分出现阴影点的情况。
3.空域处理在二值化和归一化处理时更加灵活，而频域处理则往往带来许多问题。


-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------

***源代码
需要用到的函数：


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%巴特沃斯滤波器：
function[image_out]=Bfilter(image_in,D0,N,h)
%Butterworth滤波器,巴特沃斯滤波器的截止频率为D0，阶数N
%h为1的时候为高通滤波，0的时候为低通滤波
[m,n]=size(image_in);
P=2*m;
Q=2*n;
fp = zeros(P, Q);
%对图像填充0,并且乘以(-1)^(x+y) 以移到变换中心
for i = 1 : m
    for j = 1 : n
        fp(i, j) = double(image_in(i, j)) * (-1)^(i+j);
    end
end

F1=fft2(fp);%对图像做傅里叶变换

H=zeros(P,Q);
%生成巴特沃斯滤波函数，中心在（m,n）
for u=1:P
    for v=1:Q
        temp=((u-m)^2+(v-m)^2)^(1/2);
        if h==0 
            H(u,v)=1/(1+(temp/D0)^(2*N));
        elseif h==1
            H(u,v)=1/(1+(D0/temp)^(2*N)); 
        end
    end
end

%进行滤波
G=F1 .*H;

gp = ifft2(G);%傅里叶反变换
image_out=zeros(m,n);
%得到结果图像
for x=1:m
    for y=1:n
        image_out(x,y)=real(gp(x,y))*(-1)^(x+y);
    end
end
image_out=uint8(image_out);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%高斯滤波器：
function[image_out]=Gfilter(image_in,D0,h)
%Gaussian滤波器,高斯滤波器的截止频率为D0
%h为1的时候为高通滤波，0的时候为低通滤波
[m,n]=size(image_in);
P=2*m;
Q=2*n;
fp = zeros(P, Q);
%对图像填充0,并且乘以(-1)^(x+y) 以移到变换中心
for i = 1 : m
    for j = 1 : n
        fp(i, j) = double(image_in(i, j)) * (-1)^(i+j);
    end
end

F1=fft2(fp);%对图像做傅里叶变换

H=zeros(P,Q);
%生成高斯滤波函数，中心在（m,n）
for u=1:P
    for v=1:Q
        temp=(u-m)^2+(v-m)^2;%得到D(u,v)^2
        if h==0 %高斯低通滤波器
            H(u,v)=exp(-temp/(2*D0^2));
        elseif h==1%高斯高通滤波器
            H(u,v)=1-exp(-temp/(2*D0^2)); 
        end
    end
end

%进行滤波
G=F1 .*H;

gp = ifft2(G);%傅里叶反变换
image_out=zeros(m,n);
%得到结果图像
for x=1:m
    for y=1:n
        image_out(x,y)=uint8(real(gp(x,y))*(-1)^(x+y));
    end
end
image_out=uint8(image_out);

        
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%拉普拉斯滤波器：
function[image_out]=Lfilter(image_in)
%拉普拉斯滤波器,高斯滤波器的截止频率为D0
%h为1的时候为高通滤波，0的时候为低通滤波
[m,n]=size(image_in);
P=2*m;
Q=2*n;
fp = zeros(P, Q);
%对图像填充0,并且乘以(-1)^(x+y) 以移到变换中心

for i = 1 : m
    for j = 1 : n
        fp(i, j) = double(image_in(i, j)) * (-1)^(i+j);%将中心移动
    end
end

F1=fft2(fp);%对图像做傅里叶变换

H=zeros(P,Q);
%生成拉普拉斯滤波函数，中心在（m,n）
for u=1:P
    for v=1:Q
           temp=(u-m)^2+(v-m)^2;%得到D(u,v)^2
            H(u,v)=4*(pi^2)*temp+1; %得到滤波函数
    end
end

%进行滤波
G=F1.*H;
gp = ifft2(G);%傅里叶反变换

%得到结果图像
for x=1:m
    for y=1:n
        g(x,y)=real(gp(x,y))*(-1)^(x+y);
    end
end
mmax = max(g(:));
mmin = min(g(:));
range = mmax-mmin;

image_out=zeros(m,n);
for i = 1 : m
    for j = 1 : n
        image_out(i,j) = 255 * (g(i, j)-mmin) / range;
    end
end
image_out=uint8(image_out);

    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Unmask滤波器：
function[image_out]=Ufilter(image_in,D0)
%拉普拉斯滤波器,高斯滤波器的截止频率为D0
%h为1的时候为高通滤波，0的时候为低通滤波
[m,n]=size(image_in);
P=2*m;
Q=2*n;
fp = zeros(P, Q);
%对图像填充0,并且乘以(-1)^(x+y) 以移到变换中心

%将中心移动
for i = 1 : m
    for j = 1 : n
        fp(i, j) = double(image_in(i, j)) * (-1)^(i+j);
    end
end

F1=fft2(fp);%对图像做傅里叶变换

H=zeros(P,Q);
%生成unmask高通滤波函数，中心在（m,n）
for u=1:P
    for v=1:Q
           temp=(u-m)^2+(v-m)^2;%得到D(u,v)^2
           if(temp<D0^2)
               H(u,v)=0; 
           else
               H(u,v)=1;
           end         
    end
end
%进行滤波
G=F1.*H;
gp = ifft2(G);%傅里叶反变换
%得到结果图像
for x=1:m
    for y=1:n
        g(x,y)=real(gp(x,y))*(-1)^(x+y);
    end
end
mmax = max(g(:));
mmin = min(g(:));
range = mmax-mmin;

%255灰度值标准化处理
image_out=zeros(m,n);
for i = 1 : m
    for j = 1 : n
        image_out(i,j) = 255 * (g(i, j)-mmin) / range;
    end
end
image_out=uint8(image_out);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%第一题:
clear all;
close all;
clc;
D0=250;  %截止频率
h=0;   %低通
image_1=imread('test1.pgm');
image_2=imread('test2.tif');

image_1B=Bfilter(image_1,D0,2,h);
image_1G=Gfilter(image_1,D0,h);
image_2B=Bfilter(image_2,D0,2,h);
image_2G=Gfilter(image_2,D0,h);
figure
subplot(2,3,1)
imshow(image_1)
title('test1原图')
subplot(2,3,2)
imshow(image_1B)
title('test1巴特沃斯低通滤波')
subplot(2,3,3)
imshow(image_1G)
title('test1高斯低通滤波')
subplot(2,3,4)
imshow(image_2)
title('test2原图')
subplot(2,3,5)
imshow(image_2B)
title('test2巴特沃斯低通滤波')
subplot(2,3,6)
imshow(image_2G)
title('test2高斯低通滤波')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%第二题：
clear all;
close all;
clc;
D0=18;   %截止频率
N=2;     %阶数
h=1;     %高通
image_1=imread('test3.pgm');
image_2=imread('test4.bmp');

image_1B=Bfilter(image_1,D0,N,h);
image_1G=Gfilter(image_1,D0,h);
image_2B=Bfilter(image_2,D0,N,h);
image_2G=Gfilter(image_2,D0,h);
figure
subplot(2,3,1)
imshow(image_1)
title('test1原图')
subplot(2,3,2)
imshow(image_1B)
title('test1巴特沃斯高通滤波')
subplot(2,3,3)
imshow(image_1G)
title('test1高斯高通滤波')
subplot(2,3,4)
imshow(image_2)
title('test2原图')
subplot(2,3,5)
imshow(image_2B)
title('test2巴特沃斯高通滤波')
subplot(2,3,6)
imshow(image_2G)
title('test2高斯高通滤波')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%第三题：
clear all;
close all;
clc;
D0=80;%截止频率

image_1=imread('test3.pgm');
image_2=imread('test4.bmp');

image_1L=Lfilter(image_1);
image_1U=Ufilter(image_1,D0);

image_2L=Lfilter(image_2);
image_2U=Ufilter(image_2,D0);

figure
subplot(2,3,1)
imshow(image_1);
title('test3原图')
subplot(2,3,2)
imshow(image_1L);
title('test3高通拉普拉斯变换')
subplot(2,3,3)
imshow(image_1U);
title('test3的高通unmask变换')
subplot(2,3,4)
imshow(image_2);
title('test4原图')
subplot(2,3,5)
imshow(image_2L);
title('test4高通拉普拉斯变换')
subplot(2,3,6)
imshow(image_2U);
title('test4的高通unmask变换')


